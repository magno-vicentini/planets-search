{"version":3,"sources":["context/PlanetsContext.jsx","components/Table.jsx","hooks/useCompare.jsx","context/PlanetsProvider.jsx","components/FilterPlanet.jsx","App.js","index.js"],"names":["PlanetsContext","createContext","Table","planets","useContext","map","name","rotationPeriod","rotation_period","diameter","climate","gravity","terrain","surfaceWater","surface_water","orbitalPeriod","orbital_period","population","films","created","edited","url","key","className","data-testid","useCompare","setPlanets","allFilterByNumber","filterByNumericValues","useEffect","length","forEach","comparison","column","value","filterNumber","filter","planet","Number","PlanetsProvider","children","useState","allPlanets","setAllPlanets","filterByName","filterPlanetName","setFilterPlanetName","setAllFilterByNumber","deletedFilter","setDeletedFilter","a","fetch","then","response","json","results","sort","b","fetchPlanets","includes","filtersColumn","numberFilter","setNumberFilter","filterByNumber","setFilterByNumber","filterByOrder","setFilterByOrder","order","orderFilter","setOrderFilter","context","handleFilterName","target","handleColumnFilter","applyFilterNumber","type","restoreFilter","el","handleSortFilter","applyFilterOrder","console","log","Provider","FilterPlanet","placeholder","onChange","onSubmit","e","preventDefault","disabled","htmlFor","id","onClick","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.721897d6.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst PlanetsContext = createContext();\n\nexport default PlanetsContext;\n","import React, { useContext } from 'react';\nimport PlanetsContext from '../context/PlanetsContext';\nimport '../styles/Table.css';\n\nfunction Table() {\n  const { planets } = useContext(PlanetsContext);\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Rotation Period</th>\n          <th>Orbital Period</th>\n          <th>Diameter</th>\n          <th>Climate</th>\n          <th>Gravity</th>\n          <th>Terrain</th>\n          <th>Surface Water</th>\n          <th>Population</th>\n          <th>Films</th>\n          <th>Created</th>\n          <th>Edited</th>\n          <th>Url</th>\n        </tr>\n      </thead>\n      <tbody>\n        {planets.map((\n          { name, rotation_period: rotationPeriod, diameter,\n            climate, gravity, terrain, surface_water: surfaceWater,\n            orbital_period: orbitalPeriod, population, films, created, edited, url },\n        ) => (\n          <tr key={ name } className=\"table-search\">\n            <td data-testid=\"planet-name\">{ name }</td>\n            <td>{ rotationPeriod }</td>\n            <td>{ orbitalPeriod }</td>\n            <td>{ diameter }</td>\n            <td>{ climate }</td>\n            <td>{ gravity }</td>\n            <td>{ terrain }</td>\n            <td>{ surfaceWater }</td>\n            <td>{ population }</td>\n            <td>{ films }</td>\n            <td>{ created }</td>\n            <td>{ edited }</td>\n            <td>{ url }</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default Table;\n","import { useEffect } from 'react';\n\nconst useCompare = (setPlanets, allFilterByNumber, planets) => {\n  const { filterByNumericValues } = allFilterByNumber;\n\n  useEffect(() => {\n    if (filterByNumericValues.length) {\n      filterByNumericValues.forEach(({ comparison, column, value }) => {\n        const filterNumber = planets.filter((planet) => {\n          switch (comparison) {\n          case 'maior que':\n            return Number(planet[column]) > Number(value);\n          case 'menor que':\n            return Number(planet[column]) < Number(value);\n          case 'igual a':\n            return Number(planet[column]) === Number(value);\n          default:\n            return true;\n          }\n        });\n        setPlanets(filterNumber);\n      });\n    }\n  }, [allFilterByNumber]);\n};\n\nexport default useCompare;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport PlanetsContext from './PlanetsContext';\n// import usePlanets from '../hooks/usePlanets';\nimport useCompare from '../hooks/useCompare';\n\nfunction PlanetsProvider({ children }) {\n  // const [planets, setFilterPlanetName,\n  //   filterPlanetName, setPlanets, allFilterByNumber,\n  //   setAllFilterByNumber, deletedFilter, setDeletedFilter,\n  //   allPlanets] = usePlanets();\n\n  const [planets, setPlanets] = useState([]);\n  const [allPlanets, setAllPlanets] = useState([]);\n  const [filterPlanetName, setFilterPlanetName] = useState({\n    filterByName: {\n      name: '',\n    },\n  });\n  const [allFilterByNumber, setAllFilterByNumber] = useState({\n    filterByNumericValues: [],\n  });\n\n  const [deletedFilter, setDeletedFilter] = useState([]);\n  const NEGATIVEONE = -1;\n  const URL = 'https://swapi-trybe.herokuapp.com/api/planets/';\n  const { filterByName } = filterPlanetName;\n  useEffect(() => {\n    const fetchPlanets = async () => {\n      const { results } = await fetch(URL).then((response) => response.json());\n      setAllPlanets(results);\n      setPlanets(results.sort((a, b) => ((a.name > b.name) ? 1 : NEGATIVEONE)));\n    };\n    fetchPlanets();\n  }, [NEGATIVEONE]);\n\n  useEffect(() => {\n    setPlanets(allPlanets\n      .filter(({ name }) => name.includes(filterByName.name)));\n  }, [allPlanets, filterByName]);\n\n  useCompare(setPlanets, allFilterByNumber, planets);\n\n  const filtersColumn = [\n    'population', 'orbital_period',\n    'diameter', 'rotation_period', 'surface_water',\n  ];\n  const [numberFilter, setNumberFilter] = useState(filtersColumn);\n\n  const [filterByNumber, setFilterByNumber] = useState({\n    column: 'population',\n    comparison: 'maior que',\n    value: 0,\n  });\n\n  const [filterByOrder, setFilterByOrder] = useState({\n    column: 'population',\n    sort: 'ASC',\n  });\n\n  const [orderFilter, setOrderFilter] = useState({\n    order: {},\n  });\n\n  function handleFilterName({ target }) {\n    const { value } = target;\n    setFilterPlanetName({\n      ...filterPlanetName,\n      filterByName: { name: value },\n    });\n  }\n\n  function handleColumnFilter({ target }) {\n    const { value, name } = target;\n    setFilterByNumber({\n      ...filterByNumber,\n      [name]: value,\n    });\n  }\n\n  function handleSortFilter({ target }) {\n    const { value, name } = target;\n    setFilterByOrder({\n      ...filterByOrder,\n      [name]: value,\n    });\n  }\n\n  function applyFilterNumber() {\n    setNumberFilter(numberFilter.filter((type) => type !== filterByNumber.column));\n\n    setAllFilterByNumber({\n      ...allFilterByNumber,\n      filterByNumericValues: [\n        ...allFilterByNumber.filterByNumericValues,\n        filterByNumber,\n      ],\n    });\n    setDeletedFilter([\n      ...deletedFilter,\n      filterByNumber,\n    ]);\n  }\n\n  const applyFilterOrder = () => {\n    const { column, sort } = filterByOrder;\n    setOrderFilter({\n      ...orderFilter,\n      order: filterByOrder,\n    });\n    if (sort === 'ASC') {\n      console.log(column);\n      setPlanets(planets.sort((a, b) => a[column] - b[column]));\n    }\n    if (sort === 'DESC') {\n      setPlanets(planets.sort((a, b) => b[column] - a[column]));\n    }\n  };\n\n  function restoreFilter(filter) {\n    setPlanets(allPlanets);\n\n    setDeletedFilter([\n      ...deletedFilter.filter((el) => el !== filter),\n    ]);\n    setAllFilterByNumber({\n      ...allFilterByNumber,\n      filterByNumericValues: [\n        ...allFilterByNumber.filterByNumericValues.filter((el) => el !== filter),\n      ],\n    });\n    setNumberFilter([\n      ...numberFilter,\n      filter.column,\n    ]);\n    setFilterByNumber({\n      ...filterByNumber,\n      column: numberFilter[0],\n    });\n  }\n\n  // useEffect(() => {\n  //   const { column, sort } = orderFilter.order;\n  //   console.log(orderFilter.order);\n  //   console.log(planets);\n  //   if (sort === 'ASC') {\n  //     setPlanets(planets.sort((a, b) => a[column] - b[column]));\n  //   }\n  //   if (sort === 'DESC') {\n  //     setPlanets(planets.sort((a, b) => b[column] - a[column]));\n  //   }\n  // }, [orderFilter]);\n\n  const context = {\n    planets,\n    handleFilterName,\n    handleColumnFilter,\n    applyFilterNumber,\n    numberFilter,\n    deletedFilter,\n    restoreFilter,\n    filterByNumber,\n    handleSortFilter,\n    applyFilterOrder,\n    filtersColumn,\n  };\n  return (\n    <PlanetsContext.Provider value={ context }>\n      { children }\n    </PlanetsContext.Provider>\n  );\n}\n\nPlanetsProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default PlanetsProvider;\n","import React, { useContext } from 'react';\nimport PlanetsContext from '../context/PlanetsContext';\nimport '../styles/FilterPlanet.css';\n\nexport default function FilterPlanet() {\n  const { handleFilterName, handleColumnFilter,\n    applyFilterNumber, numberFilter,\n    deletedFilter, restoreFilter,\n    filterByNumber, handleSortFilter,\n    applyFilterOrder, filtersColumn } = useContext(PlanetsContext);\n\n  const compareFilter = ['maior que', 'igual a', 'menor que'];\n\n  return (\n    <div className=\"search-container\">\n      <h1>StarWars Search Planets</h1>\n      <input\n        data-testid=\"name-filter\"\n        type=\"text\"\n        placeholder=\"Search By Name\"\n        onChange={ handleFilterName }\n      />\n      <form\n        onSubmit={ (e) => {\n          e.preventDefault();\n          applyFilterNumber();\n        } }\n      >\n        <select\n          name=\"column\"\n          onChange={ handleColumnFilter }\n          data-testid=\"column-filter\"\n        >\n          {\n            numberFilter.map((el) => <option key={ el }>{ el }</option>)\n          }\n        </select>\n        <select\n          name=\"comparison\"\n          data-testid=\"comparison-filter\"\n          onChange={ handleColumnFilter }\n        >\n          {\n            compareFilter.map((el) => <option key={ el }>{ el }</option>)\n          }\n        </select>\n        <input\n          type=\"number\"\n          name=\"value\"\n          value={ filterByNumber.value }\n          data-testid=\"value-filter\"\n          onChange={ handleColumnFilter }\n        />\n        <button\n          type=\"submit\"\n          data-testid=\"button-filter\"\n          disabled={ numberFilter.length === 0 }\n        >\n          Filtrar\n        </button>\n      </form>\n      {\n        deletedFilter && deletedFilter.map((filter) => (\n          <label\n            htmlFor=\"'deleted-filter'\"\n            key={ filter.column }\n            data-testid=\"filter\"\n          >\n            {`${filter.column} ${filter.comparison} ${filter.value}` }\n            <button\n              type=\"button\"\n              id=\"deleted-filter\"\n              onClick={ () => restoreFilter(filter) }\n            >\n              X\n            </button>\n\n          </label>\n        ))\n      }\n      <form\n        onSubmit={ (e) => {\n          e.preventDefault();\n          applyFilterOrder();\n        } }\n      >\n        <select\n          name=\"column\"\n          onChange={ handleSortFilter }\n          data-testid=\"column-sort\"\n        >\n          {\n            filtersColumn.map((el) => <option key={ el }>{ el }</option>)\n          }\n        </select>\n        <label htmlFor=\"asc-radio\">\n          <input\n            type=\"radio\"\n            id=\"asc-radio\"\n            name=\"sort\"\n            value=\"ASC\"\n            onClick={ handleSortFilter }\n            data-testid=\"column-sort-input-asc\"\n          />\n          Ascendente\n        </label>\n        <label htmlFor=\"desc-radio\">\n          <input\n            type=\"radio\"\n            name=\"sort\"\n            id=\"desc-radio\"\n            value=\"DESC\"\n            onClick={ handleSortFilter }\n            data-testid=\"column-sort-input-desc\"\n          />\n          Descendente\n        </label>\n        <button type=\"submit\" data-testid=\"column-sort-button\">Ordenar</button>\n      </form>\n    </div>\n  );\n}\n","import React from 'react';\nimport Table from './components/Table';\nimport PlanetsProvider from './context/PlanetsProvider';\nimport FilterPlanet from './components/FilterPlanet';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <PlanetsProvider>\n      <FilterPlanet />\n      <Table />\n    </PlanetsProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}